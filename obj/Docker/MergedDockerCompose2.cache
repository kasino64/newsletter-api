name: dockercompose613210867584869557
services:
  newsletterapi:
    build:
      context: E:\Project\DOCUMENTS\DevOps\NewsletterAPI
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: NewsletterApi
      target: base
    container_name: NewsletterApi
    depends_on:
      sqlserver:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages;/root/.nuget/fallbackpackages2;/root/.nuget/fallbackpackages3
    image: newsletterapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages --additionalProbingPath
        /root/.nuget/fallbackpackages2 --additionalProbingPath /root/.nuget/fallbackpackages3  "/app/bin/Debug/net7.0/NewsletterApi.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: E:\Project\DOCUMENTS\DevOps\NewsletterAPI
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: E:\Project\DOCUMENTS\DevOps\NewsletterAPI
      target: /src
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Player\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Player\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files (x86)\Microsoft\Xamarin\NuGet\
      target: /root/.nuget/fallbackpackages2
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\dotnet\sdk\NuGetFallbackFolder
      target: /root/.nuget/fallbackpackages3
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Player\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Player\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  sqlserver:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      SA_PASSWORD: StrongP@ssw0rd123
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1450"
      protocol: tcp
    volumes:
    - type: volume
      source: sqlserverdata
      target: /var/opt/mssql
      volume: {}
networks:
  default:
    name: dockercompose613210867584869557_default
volumes:
  sqlserverdata:
    name: dockercompose613210867584869557_sqlserverdata